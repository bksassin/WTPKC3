{"ast":null,"code":"var _jsxFileName = \"/home/bsassin/Desktop/projects/whos-that-pokecard/src/PokemonCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [card, setCard] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://api.pokemontcg.io/v2/cards').then(res => res.json()).then(data => {\n      const randomIndex = Math.floor(Math.random() * data.data.length);\n      setCard(data.data[randomIndex]);\n      setQuestion(`Who's That Pokemon?`);\n      setAnswer(data.data[randomIndex].name);\n      const randomOptions = [];\n      let i = 0;\n      while (i < 3) {\n        const random = data.data[Math.floor(Math.random() * data.data.length)].name;\n        if (random !== answer && !randomOptions.includes(random)) {\n          randomOptions.push(random);\n          i++;\n        }\n      }\n      setOptions([...randomOptions, answer]);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid justify-center items-center\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokeball\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 text-white\",\n          children: [\"Set Name: \", card.set && card.set.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.images ? card.images.small : \"\",\n          alt: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 text-white text-center\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-white text-center\",\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sR/Dxh2ABrxvHhXCIp1Y9oeFjgk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","card","setCard","loading","setLoading","question","setQuestion","options","setOptions","answer","setAnswer","fetch","then","res","json","data","randomIndex","Math","floor","random","length","name","randomOptions","i","includes","push","set","images","small","map","option"],"sources":["/home/bsassin/Desktop/projects/whos-that-pokecard/src/PokemonCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [card, setCard] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://api.pokemontcg.io/v2/cards')\n      .then(res => res.json())\n      .then(data => {\n        const randomIndex = Math.floor(Math.random() * data.data.length);\n        setCard(data.data[randomIndex]);\n        setQuestion(`Who's That Pokemon?`);\n        setAnswer(data.data[randomIndex].name);\n        const randomOptions = [];\n        let i = 0;\n        while (i < 3) {\n          const random = data.data[Math.floor(Math.random() * data.data.length)].name;\n          if (random !== answer && !randomOptions.includes(random)) {\n            randomOptions.push(random);\n            i++;\n          }\n        }\n        setOptions([...randomOptions, answer]);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"grid justify-center items-center\">\n        {loading ? (\n          <div className=\"wrapper\">\n            <div className=\"pokeball\" />\n          </div>\n        ) : (\n          <>\n            <div className=\"mb-6 text-white\">Set Name: {card.set && card.set.name}</div>\n            <img src={card.images ? card.images.small : \"\"} alt={card.name} />\n            <div className=\"mt-6 text-white text-center\">{question}</div>\n            {options.map(option => (\n              <div key={option} className=\"mt-2 text-white text-center\">\n                {option}\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEnD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdK,UAAU,CAAC,IAAI,CAAC;IAChBO,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAM,CAAC;MAChElB,OAAO,CAACa,IAAI,CAACA,IAAI,CAACC,WAAW,CAAC,CAAC;MAC/BV,WAAW,CAAE,qBAAoB,CAAC;MAClCI,SAAS,CAACK,IAAI,CAACA,IAAI,CAACC,WAAW,CAAC,CAACK,IAAI,CAAC;MACtC,MAAMC,aAAa,GAAG,EAAE;MACxB,IAAIC,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG,CAAC,EAAE;QACZ,MAAMJ,MAAM,GAAGJ,IAAI,CAACA,IAAI,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAM,CAAC,CAAC,CAACC,IAAI;QAC3E,IAAIF,MAAM,KAAKV,MAAM,IAAI,CAACa,aAAa,CAACE,QAAQ,CAACL,MAAM,CAAC,EAAE;UACxDG,aAAa,CAACG,IAAI,CAACN,MAAM,CAAC;UAC1BI,CAAC,EAAE;QACL;MACF;MACAf,UAAU,CAAC,CAAC,GAAGc,aAAa,EAAEb,MAAM,CAAC,CAAC;MACtCL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,kCAAkC;MAAA,UAC9CD,OAAO,gBACN;QAAK,SAAS,EAAC,SAAS;QAAA,uBACtB;UAAK,SAAS,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACxB,gBAEN;QAAA,wBACE;UAAK,SAAS,EAAC,iBAAiB;UAAA,WAAC,YAAU,EAACF,IAAI,CAACyB,GAAG,IAAIzB,IAAI,CAACyB,GAAG,CAACL,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAC5E;UAAK,GAAG,EAAEpB,IAAI,CAAC0B,MAAM,GAAG1B,IAAI,CAAC0B,MAAM,CAACC,KAAK,GAAG,EAAG;UAAC,GAAG,EAAE3B,IAAI,CAACoB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAClE;UAAK,SAAS,EAAC,6BAA6B;UAAA,UAAEhB;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO,EAC5DE,OAAO,CAACsB,GAAG,CAACC,MAAM,iBACjB;UAAkB,SAAS,EAAC,6BAA6B;UAAA,UACtDA;QAAM,GADCA,MAAM;UAAA;UAAA;UAAA;QAAA,QAGjB,CAAC;MAAA;IAEL;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GApDI9B,GAAG;AAAA,KAAHA,GAAG;AAsDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}